{"version":3,"sources":["img/family.jpg","assets/quiz.png","img/img1.jpg","img/img2.jpg","img/img3.jpg","img/img4.jpeg","img/img5.jpg","img/img6.jpg","img/img7.png","img/img8.jpg","pages/StartPage.tsx","pages/SummaryPage.tsx","components/Question/Question.tsx","pages/QuizPage.tsx","components/Header.tsx","pages/App/App.tsx","serviceWorker.ts","models/ActiveView.ts","store/configureStore.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","StartPage","imgSrc","family","react_default","a","createElement","className","src","alt","react_router_dom","to","Button","variant","color","connect","state","ms","scores","dispatch","onStartAgain","type","_ref","onClick","nonFamilyPerson","familyPerson","middlePerson","withRouter","question","questions","pageView","activeQuestion","text","options","isLast","length","onNext","answerIndex","match","questionIndex","params","parseInt","_useState","useState","_useState2","Object","slicedToArray","finished","setFinished","useEffect","optionalAnswers","map","q","i","key","concat","ListItem","button","bind","ListItemText","react_router","List","QuizPage","components_Question_Question","AppBar","position","Toolbar","logo","exact","activeClassName","Typography","components_Header","path","component","SummaryPage","from","render","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ActiveViewEmum","id","img4","img5","img6","img7","img8","questionsReducer","arguments","undefined","action","toConsumableArray","payload","scoresInitState","scoresReducer","objectSpread","img1","img2","img3","pageViewState","activeView","start","pageViewReducer","store","rootReducer","combineReducers","createStore","configureStore","indexOf","theme","createMuiTheme","palette","primary","main","overrides","MuiButton","root","borderRadius","ReactDOM","es","ThemeProvider","pages_App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2c9e537d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/family.3d1d8207.jpg\";","module.exports = __webpack_public_path__ + \"static/media/quiz.7d912e4d.png\";","module.exports = __webpack_public_path__ + \"static/media/img1.c39ee950.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.b5a0408d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.acc6abc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.c9e37d2c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img5.6a10ac07.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.b32af33f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.751233b4.png\";","module.exports = __webpack_public_path__ + \"static/media/img8.64b88f2a.jpg\";","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport family from '../img/family.jpg'\r\n\r\n\r\nconst StartPage: React.FC = () => {\r\n    const imgSrc = family;\r\n    return (\r\n        <div>\r\n            <h1>Are you a family person?</h1>\r\n            <img\r\n                className={\"photo\"}\r\n                src={imgSrc}\r\n                alt=\"family\"\r\n            />\r\n            <p>Click to start the quiz</p>\r\n            <Link to=\"/question\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Start\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport './SummaryPage.scss';\r\n\r\ninterface IProps {\r\n    onStartAgain: () => void;\r\n    ms: string;\r\n    imgSrc: string;\r\n}\r\n\r\nconst SummaryPage: React.FC<IProps> = ({onStartAgain, ms, imgSrc}) => {\r\n    return (\r\n        <div>\r\n\r\n        <div>\r\n            <h2>Are you a family oriented person?</h2>\r\n            {\r\n               <h1 className={\"ms\"}>{ms}</h1>\r\n\r\n            }\r\n            <img\r\n                className={\"photo\"}\r\n                src={imgSrc}\r\n                alt=\"\"\r\n            />\r\n        </div>\r\n            <Link to=\"/\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onStartAgain}>\r\n                    Try again\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    ms: state.scores.ms,\r\n    imgSrc: state.scores.imgSrc\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    onStartAgain: () => {\r\n         dispatch({type:'RESET_VIEW'});\r\n        dispatch({type:'RESET_SCORE'});\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryPage);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {IQuestion} from '../../models/IQuestion';\r\nimport {Dispatch} from 'redux';\r\nimport {List, ListItem, ListItemText} from '@material-ui/core';\r\nimport './Question.scss'\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    text: string;\r\n    options: Array<string>;\r\n    onNext: Function;\r\n    isLast: boolean;\r\n    imgSrc?: string;\r\n}\r\n\r\nlet nonFamilyPerson = 0;\r\nlet familyPerson = 0;\r\nlet middlePerson = 0;\r\n\r\n\r\nconst Question: React.FC<IProps & RouteComponentProps> = ({text, options, onNext, isLast, match, imgSrc}) => {\r\n\r\n    let questionIndex = 0;\r\n\r\n    if (match && match.params) {\r\n        // @ts-ignore\r\n        questionIndex = parseInt(match.params['index']);\r\n    }\r\n\r\n    const [finished, setFinished] = useState(false);\r\n\r\n    useEffect(() => {\r\n        nonFamilyPerson = 0;\r\n        familyPerson = 0;\r\n        middlePerson =0;\r\n    }, []);\r\n\r\n    function onClick(answerIndex: number) {\r\n        // question 1\r\n        if (questionIndex === 1 && answerIndex === 0) {\r\n            familyPerson++;\r\n        } else if (questionIndex === 1 && answerIndex === 1) {\r\n            nonFamilyPerson++;\r\n        } else if (questionIndex === 1 && answerIndex === 2) {\r\n            middlePerson++;\r\n        }\r\n        // question 2\r\n        if (questionIndex === 2 && answerIndex === 0) {\r\n            nonFamilyPerson++;\r\n        } else if (questionIndex === 2 && answerIndex === 1) {\r\n            familyPerson++;\r\n        } else if (questionIndex === 2 && answerIndex === 2) {\r\n            middlePerson++;\r\n        }\r\n        // question 3\r\n        if (questionIndex === 3 && answerIndex === 0) {\r\n            familyPerson++;\r\n        } else if (questionIndex === 3 && answerIndex === 1) {\r\n            nonFamilyPerson++;\r\n        } else if (questionIndex === 2 && answerIndex === 2) {\r\n            middlePerson++;\r\n        }// question 4\r\n        if (questionIndex === 4 && answerIndex === 0) {\r\n            nonFamilyPerson++;\r\n        } else if (questionIndex === 4 && answerIndex === 1) {\r\n            familyPerson++;\r\n        } else if (questionIndex === 2 && answerIndex === 2) {\r\n            middlePerson++;\r\n        }// question 5\r\n        if (questionIndex === 5 && answerIndex === 0) {\r\n            familyPerson++;\r\n        } else if (questionIndex === 5 && answerIndex === 1) {\r\n            nonFamilyPerson++;\r\n        } else if (questionIndex === 2 && answerIndex === 2) {\r\n            middlePerson++;\r\n        }\r\n\r\n\r\n        onNext(answerIndex, isLast);\r\n        if (isLast) {\r\n            setFinished(true);\r\n        }\r\n    }\r\n\r\n    const optionalAnswers = options.map((q: string, i: number) => (\r\n        <Link key={i} to={`/question/${questionIndex + 1}`}>\r\n            <ListItem button onClick={onClick.bind(null, i)}>\r\n                <ListItemText>{q}</ListItemText>\r\n            </ListItem>\r\n        </Link>\r\n    ));\r\n\r\n\r\n    if (finished) {\r\n        return <Redirect to=\"/summary\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Question\">\r\n            <h1>{text}</h1>\r\n            <img\r\n                className={\"photo\"}\r\n                src={imgSrc}\r\n                alt=\"\"\r\n            />\r\n            <List className=\"Question-options\">\r\n                {optionalAnswers}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    const question: IQuestion = state.questions[state.pageView.activeQuestion];\r\n    return {\r\n        text: question.text,\r\n        options: question.options,\r\n        imgSrc: question.imgSrc,\r\n        isLast: state.pageView.activeQuestion === state.questions.length - 1,\r\n        ms: state.scores.ms,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    onNext: (answerIndex: number, isLast: boolean) => {\r\n        if (familyPerson > nonFamilyPerson) {\r\n            dispatch({type: 'ADVANCE_MS_ONE'});\r\n        } else if (nonFamilyPerson > familyPerson) {\r\n            dispatch({type: 'ADVANCE_MS_TWO'});\r\n        } else if(middlePerson > nonFamilyPerson || middlePerson > familyPerson) {\r\n            dispatch({type: 'ADVANCE_MS_THREE'})\r\n        }\r\n\r\n\r\n        if (!isLast) {\r\n            dispatch({type: 'ADVANCE_QUESTION'});\r\n        }\r\n    }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Question));\r\n","import React from 'react';\r\nimport Question from '../components/Question/Question';\r\n\r\nconst QuizPage: React.FC = () => {\r\n    return (\r\n           <Question/>\r\n    );\r\n};\r\n\r\nexport default QuizPage;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport logo from '../assets/quiz.png';\r\n\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                        <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"nav-link-active\">\r\n                            <Typography variant=\"h6\" className=\"mx-3 cursor-pointer\">\r\n                                Home\r\n                            </Typography>\r\n                        </NavLink>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\nimport './App.scss';\nimport StartPage from '../../pages/StartPage';\nimport SummaryPage from '../../pages/SummaryPage';\nimport QuizPage from '../../pages/QuizPage';\nimport Header from '../../components/Header'\nimport {connect} from 'react-redux';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\n\n\nconst App: React.FC = () => {\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Switch>\n                <Route path=\"/start\" component={StartPage}/>\n                <Route path=\"/question/:index\" component={QuizPage}/>\n                <Route path=\"/summary\" component={SummaryPage}/>\n\n                {/* Redirects */}\n                <Redirect exact from=\"/\" to=\"/start\"/>\n                <Redirect exact from=\"/question\" to=\"/question/1\"/>\n\n                {/* Fallback */}\n                <Route path=\"/\" render={() => <div>Page not found</div>}/>\n            </Switch>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: any) => ({\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum ActiveViewEmum {\r\n    start,\r\n    quiz,\r\n    summary\r\n}\r\n","import {combineReducers, createStore} from 'redux'\r\nimport {ActiveViewEmum} from '../models/ActiveView';\r\nimport {IQuestion} from '../models/IQuestion';\r\nimport img1 from '../img/img1.jpg';\r\nimport img2 from '../img/img2.jpg';\r\nimport img3 from '../img/img3.jpg';\r\nimport img4 from '../img/img4.jpeg';\r\nimport img5 from '../img/img5.jpg';\r\nimport img6 from '../img/img6.jpg';\r\nimport img7 from '../img/img7.png';\r\nimport img8 from '../img/img8.jpg';\r\n\r\nconst questions: Array<IQuestion> = [\r\n    {\r\n        id: 'q1',\r\n        text: 'Do you like children? ',\r\n        options: ['Yes- they are so cute ', 'No they\\'re horrible', 'They can be annoying '],\r\n        imgSrc: img4\r\n    },\r\n    {\r\n        id: 'q2',\r\n        text: 'If you had children would you feed them or yourself first?',\r\n        options: ['Mostly me ', 'Them ', 'Share it out but give them more '],\r\n        imgSrc: img5\r\n    },\r\n    {\r\n        id: 'q3',\r\n        text: 'What would you do if you saw a child being hit?',\r\n        options: ['Go over to them ', 'Hit the adult ','Laugh and stare'],\r\n        imgSrc: img6\r\n    },\r\n    {\r\n        id: 'q4',\r\n        text: 'What would you do if you saw a woman being hit ?',\r\n        options: ['Hit the person', 'Go over and stop it ','Ring the police'],\r\n        imgSrc: img7\r\n    },\r\n    {\r\n        id: 'q5',\r\n        text: 'Now like before but this time it\\'s your friend?',\r\n        options: ['Attack the attacker ','Laugh', 'Shout for help'],\r\n        imgSrc: img8\r\n    }\r\n];\r\n\r\ninterface Action {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst questionsReducer = (state = questions, action: Action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUESTIONS':\r\n            return [...action.payload];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst scoresInitState = {\r\n    ms: '',\r\n    imgSrc: ''\r\n};\r\n\r\nconst scoresReducer = (state = scoresInitState, action: Action) => {\r\n    switch (action.type) {\r\n    case 'ADVANCE_MS_ONE':\r\n            return {\r\n                ...state,\r\n                ms: state.ms = 'You are amazing and perfect a family person',\r\n                imgSrc: img1\r\n            };\r\n        case 'ADVANCE_MS_TWO':\r\n            return {\r\n                ...state,\r\n                ms: state.ms = 'You\\'re not a family person',\r\n                imgSrc: img2\r\n            };\r\n        case 'ADVANCE_MS_THREE':\r\n            return {\r\n                ...state,\r\n                ms: state.ms = 'You\\'re in the middle, like most of the people',\r\n                imgSrc: img3\r\n            };\r\n\r\n        case 'RESET_SCORE':\r\n            return {...scoresInitState};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst pageViewState = {\r\n    activeView: ActiveViewEmum.start,\r\n    activeQuestion: 0,\r\n};\r\n\r\nconst pageViewReducer = (state = pageViewState, action: Action) => {\r\n    switch (action.type) {\r\n        case 'ADVANCE_QUESTION':\r\n            return {\r\n                ...state,\r\n                activeQuestion: state.activeQuestion + 1\r\n            };\r\n\r\n        case 'CHANGE_VIEW':\r\n            return {\r\n                activeView: action.payload,\r\n                activeQuestion: 0\r\n            };\r\n\r\n        case 'RESET_VIEW':\r\n            return {...pageViewState};\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default function configureStore() {\r\n    // combine all reducers to create  root reducer\r\n    const rootReducer = combineReducers({\r\n        questions: questionsReducer,\r\n        scores: scoresReducer,\r\n        pageView: pageViewReducer\r\n    });\r\n\r\n    return createStore(rootReducer);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.scss';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport {createMuiTheme} from '@material-ui/core';\nimport {ThemeProvider} from '@material-ui/styles';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nconst store = configureStore();\n\nif(window.location.hostname.indexOf('localhost') > -1) {\n    // @ts-ignore\n    window['store'] = store;\n}\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#673ab7'\n        },\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                borderRadius: '8px', // Some CSS\n            },\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <Router>\n                <App />\n            </Router>\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}